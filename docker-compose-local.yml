version: '3.5'
services:
  api1: # API - Instância 01
    image: teohen/rinha-de-backend:local
    hostname: api1
    environment:
      - HTTP_PORT=8081
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rinhadebackend
      - DB_PORT=5432
      - REDIS_HOST=cache
    depends_on:
        - postgres
        - cache
    expose:
        - "8081"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'


  api2: # API - Instância 01
    image: teohen/rinha-de-backend:local
    hostname: api2
    depends_on:
      - postgres
      - cache
    expose:
      - "8082"
    environment:
      - HTTP_PORT=8082
      - DB_HOST=db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=rinhadebackend
      - DB_PORT=5432
      - REDIS_HOST=cache
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'


  nginx: # Load Balancer
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api1
      - api2
    ports:
      - "9999:9999"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: '0.5GB'

  postgres: # Banco de dados
    image: postgres:latest
    hostname: db
    container_name: postgres-rinha-de-backend
    volumes:
      - ./db.sql:/docker-entrypoint-initdb.d/db.sql
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: rinhadebackend
      POSTGRES_HOST_AUTH_METHOD: "trust"
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: '1.5GB'
    ports:
      - "5431:5431"

  cache:
    hostname: cache
    image: redis:latest
    command: redis-server --save "" --appendonly no
    ports:
      - '6379:6379'
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: '1.5GB'

